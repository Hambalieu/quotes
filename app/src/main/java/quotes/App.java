/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.Random;

public class App {

    public String getQuotes(String[] args) {
        try{
            String userPath = System.getProperty("user.dir");
            String resourcesPath = "";
            System.out.println(userPath);
            String fileName = args[0];
            String chooseRand = args[1];

            System.out.println(fileName);
            if (userPath.endsWith("quotes")) {
                resourcesPath = "./app/src/main/resources/";
            } else {
                resourcesPath = "src/main/resources/";
            }
            //"./app/src/main/resources/recentquotes.json
            Gson gson = new Gson();
            File recentquotesJsonFile = new File(resourcesPath + fileName);
            FileReader recentquotesJsonFileReader = new FileReader(recentquotesJsonFile);
            List <Quote> quotesList = new Gson().fromJson(recentquotesJsonFileReader, new TypeToken<List<Quote>>() {}.getType());
            recentquotesJsonFileReader.close();

            if (chooseRand.equals("yes")){
                Random random = new Random();
                int randomNumber =random.nextInt(0, quotesList.size() - 1);
                Quote chosenQuote = quotesList.get(randomNumber);

                System.out.println("Author: " + chosenQuote.author);
                System.out.println("Quote: " + chosenQuote.text);
                String stringBuilder = "Author: " + chosenQuote.author + "\nQuote: " + chosenQuote.text;

                return stringBuilder;
            } else {

                Quote chosenQuote = quotesList.get(0);
                System.out.println("Author: " + chosenQuote.author);
                System.out.println("Quote: " + chosenQuote.text);
                String stringBuilder = "Author: " + chosenQuote.author + "\nQuote: " + chosenQuote.text;
                return stringBuilder;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void main(String[] args) {
        try{
            String userPath = System.getProperty("user.dir");
            String resourcesPath = "";
            System.out.println(userPath);
            String fileName = args[0];
            Boolean chooseRand = Boolean.valueOf(args[1]);

            System.out.println(fileName);
            if (userPath.endsWith("quotes")) {
                resourcesPath = "./app/src/main/resources/";
            } else {
                resourcesPath = "src/main/resources/";
            }
            //"./app/src/main/resources/recentquotes.json
            Gson gson = new Gson();
            File recentquotesJsonFile = new File(resourcesPath + fileName);
            FileReader recentquotesJsonFileReader = new FileReader(recentquotesJsonFile);
            List <Quote> quotesList = new Gson().fromJson(recentquotesJsonFileReader, new TypeToken<List<Quote>>() {}.getType());
            recentquotesJsonFileReader.close();

            if (chooseRand){
                Random random = new Random();
                int randomNumber =random.nextInt(0, quotesList.size() - 1);
                Quote chosenQuote = quotesList.get(randomNumber);

                System.out.println("Author: " + chosenQuote.author);
                System.out.println("Quote: " + chosenQuote.text);

            } else {

                Quote chosenQuote = quotesList.get(0);
                System.out.println("Author: " + chosenQuote.author);
                System.out.println("Quote: " + chosenQuote.text);

            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
