/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;
import java.util.Random;
import java.io.FileWriter;

public class App {

    public String getQuotes(String[] args)throws IOException  {
            String userPath = System.getProperty("user.dir");
            String resourcesPath = "";
            System.out.println(userPath);
            String fileName = args[0];
            String chooseRand = args[1];
            Quote quoteToAddToFile = null;
            Boolean gotDataFromApi = false;

            if (userPath.endsWith("quotes")) {
                resourcesPath = "./app/src/main/resources/";
            } else {
                resourcesPath = "src/main/resources/";
            }

            try{
                URL quoteUrl = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
                URLConnection quoteUrlConnection = quoteUrl.openConnection();
                HttpURLConnection quoteHttpUrlConnection = (HttpURLConnection) quoteUrlConnection;
                quoteHttpUrlConnection.setRequestMethod("GET");
                InputStreamReader quoteInputStreamReader = new InputStreamReader(quoteHttpUrlConnection.getInputStream());
                BufferedReader quoteBufferedReader = new BufferedReader(quoteInputStreamReader);

                String quoteApiLine = quoteBufferedReader.readLine();

                Gson gson = new GsonBuilder().setPrettyPrinting().create();
                QuoteApi quoteApi = gson.fromJson(quoteApiLine, QuoteApi.class);

                Quote convertQuote = new Quote(null, quoteApi.quoteAuthor, "", quoteApi.quoteText);
                quoteToAddToFile = convertQuote;
                String convertQuoteToJson = gson.toJson(convertQuote);
                gotDataFromApi = true;
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                Gson gson = new Gson();
                File recentquotesJsonFile = new File(resourcesPath + fileName);
                FileReader recentquotesJsonFileReader = new FileReader(recentquotesJsonFile);
                List <Quote> quotesList = new Gson().fromJson(recentquotesJsonFileReader, new TypeToken<List<Quote>>() {}.getType());
                recentquotesJsonFileReader.close();
                quotesList.add(quoteToAddToFile);

                Gson gsonTwo = new GsonBuilder().setPrettyPrinting().create();

                String updatedQuotesList = gsonTwo.toJson(quotesList);

                File quotesJsonFile = new File(resourcesPath + fileName);
                try (FileWriter jsonFileWriter = new FileWriter(quotesJsonFile) ){
                    jsonFileWriter.write(updatedQuotesList);

                }


                if (chooseRand.equals("true")){

                    if(quoteToAddToFile == null){
                        Random random = new Random();
                        int randomNumber = random.nextInt(0, quotesList.size() - 1);
                        Quote chosenQuote = quotesList.get(randomNumber);

                        return "Author: " + chosenQuote.author + "\nQuote: " + chosenQuote.text;

                    }else {
                        Random random = new Random();
                        int randomNumber = random.nextInt(0, quotesList.size() - 1);
                        Quote chosenQuote = quotesList.get(randomNumber);

                        return "Author: " + quoteToAddToFile.author + "\nQuote: " + quoteToAddToFile.text;
                    }

                } else {

                    Quote chosenQuote = quotesList.get(0);
                    return "Author: " + chosenQuote.author + "\nQuote: " + chosenQuote.text;

                }
            }

    }

    public static void main(String[] args) throws IOException {
        String userPath = System.getProperty("user.dir");
        String resourcesPath = "";
        System.out.println(userPath);
        String fileName = args[0];
        Boolean chooseRand = Boolean.valueOf(args[1]);
        Quote quoteToAddToFile = null;

        if (userPath.endsWith("quotes")) {
            resourcesPath = "./app/src/main/resources/";
        } else {
            resourcesPath = "src/main/resources/";
        }

        try{
                URL quoteUrl = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
                URLConnection quoteUrlConnection = quoteUrl.openConnection();
                HttpURLConnection quoteHttpUrlConnection = (HttpURLConnection) quoteUrlConnection;
                quoteHttpUrlConnection.setRequestMethod("GET");
                InputStreamReader quoteInputStreamReader = new InputStreamReader(quoteHttpUrlConnection.getInputStream());
                BufferedReader quoteBufferedReader = new BufferedReader(quoteInputStreamReader);

                String quoteApiLine = quoteBufferedReader.readLine();

                Gson gson = new GsonBuilder().setPrettyPrinting().create();
                QuoteApi quoteApi = gson.fromJson(quoteApiLine, QuoteApi.class);

                Quote convertQuote = new Quote(null, quoteApi.quoteAuthor, "", quoteApi.quoteText);
                quoteToAddToFile = convertQuote;
                String convertQuoteToJson = gson.toJson(convertQuote);

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            Gson gson = new Gson();
            File recentquotesJsonFile = new File(resourcesPath + fileName);
            FileReader recentquotesJsonFileReader = new FileReader(recentquotesJsonFile);
            List <Quote> quotesList = new Gson().fromJson(recentquotesJsonFileReader, new TypeToken<List<Quote>>() {}.getType());
            recentquotesJsonFileReader.close();
            quotesList.add(quoteToAddToFile);

            Gson gsonTwo = new GsonBuilder().setPrettyPrinting().create();

            String updatedQuotesList = gsonTwo.toJson(quotesList);

            File quotesJsonFile = new File(resourcesPath + fileName);
            try (FileWriter jsonFileWriter = new FileWriter(quotesJsonFile) ){
                jsonFileWriter.write(updatedQuotesList);

            }


            if (chooseRand){

                if(quoteToAddToFile == null){
                    Random random = new Random();
                    int randomNumber = random.nextInt(0, quotesList.size() - 1);
                    Quote chosenQuote = quotesList.get(randomNumber);

                    System.out.println("Author: " + chosenQuote.author);
                    System.out.println("Quote: " + chosenQuote.text);

                }else {
                    Random random = new Random();
                    int randomNumber = random.nextInt(0, quotesList.size() - 1);
                    Quote chosenQuote = quotesList.get(randomNumber);

                    System.out.println("Author: " + quoteToAddToFile.author);
                    System.out.println("Quote: " + quoteToAddToFile.text);
                }

            } else {

                Quote chosenQuote = quotesList.get(0);
                System.out.println("Author: " + chosenQuote.author);
                System.out.println("Quote: " + chosenQuote.text);


            }
        }
    }
}
